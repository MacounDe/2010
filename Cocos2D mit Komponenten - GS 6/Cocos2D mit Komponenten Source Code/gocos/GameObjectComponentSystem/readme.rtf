{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs20 \cf0 TODO:\
\
send/receive messages:\
	fix: can only send messages from components ... not a good idea?\
\
component templates\
	+create components with entity = nil\
	be able to add such components in a named dictionary\
	implement nscopying of properties via runtime stuff\
	or: properly implement NSCopying in all component classes?\
	+set owning entity after assemble\
\
\
refactor component initialization -> [entity assemble]\
	+defer calling onInitialize for each component in assemble once all components are added\
	+get pointers to other components as needed\
\
add a "WNAllComponents.h" import with all components\
	allows componennts to be written without hardwiring dependencies to others via #import\
	(it still happens but it becomes transparent to the developer)\
autocreate WNAllComponents.h as prebuild step\
	don't overwrite if contents are the same\
\
think: how would spritesheet component work?\
	probably different constructor of sprite component, taking spritesheet (component?)\
	or: look in parent entity for spritesheet component!\
\
load appdelegate director setup from XML\
support scene transitions in scene manager\
	\
component activation rules (?)\
scene manager\
components in components (?)\
\
global header file with all includes for users (like cocos2d.h)\
\
\
remove update for components that don't use it?\
\
portrait mode autorotation in app delegate\
	also for portrait/landscape changes\
	also: support global rotation anim whenever that happens?\
	}